package org.papamitra.pasori;
//import com.ochafik.lang.jnaerator.runtime.LibraryExtractor;
//import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
/**
 * JNA Wrapper for library <b>libpafe</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface LibpafeLibrary extends Library {
//	public static final java.lang.String JNA_LIBRARY_NAME = LibraryExtractor.getLibraryPath("libpafe", true, libpafe.LibpafeLibrary.class);
//	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(libpafe.LibpafeLibrary.JNA_LIBRARY_NAME, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
//	public static final LibpafeLibrary INSTANCE = (LibpafeLibrary)Native.loadLibrary(libpafe.LibpafeLibrary.JNA_LIBRARY_NAME, libpafe.LibpafeLibrary.class, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
	/**
	 * <i>native declaration : libpafe.h:19</i><br>
	 * enum values
	 */
	public static interface PASORI_TYPE {
		/// <i>native declaration : libpafe.h:20</i>
		public static final int PASORI_TYPE_S310 = 0;
		/// <i>native declaration : libpafe.h:21</i>
		public static final int PASORI_TYPE_S320 = 1;
		/// <i>native declaration : libpafe.h:22</i>
		public static final int PASORI_TYPE_S330 = 2;
	};
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_POLLING_EDY = 65024;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_POLLING = 0;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI_ERR_CHKSUM = 5;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_AREA_NUM_MAX = 121;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_READ_WITHOUT_ENCRYPTION = 6;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_DIAG_CPU_FUNCTION_TEST = 3;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_REQUEST_SERVICE = 2;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_DIAG_CPU_FANCTION_TEST = 3;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_REQUEST_RESPONSE = 4;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_READ_FROM_SECURE_FILE = 20;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_DIAG_EEPROM_TEST = 1;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_POLLING_SUICA = 3;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI_ERR_FORMAT = 6;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_CMD_SEND_PACKET = 92;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_READ_WITHOUT_ENCRYPTION = 7;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_AUTHENTICATION2 = 18;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI_ERR_MEM = 2;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_PMM_LENGTH = 8;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_AUTHENTICATION1 = 16;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_BLOCK_LENGTH = 16;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_POLLING = 1;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_POLLING_ANY = 65535;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_REQUEST_SYSTEM = 13;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_AUTHENTICATION2 = 19;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_AUTHENTICATION1 = 17;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_WRITE_TO_SECURE_FILE = 23;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_SERVICE_SUICA_HISTORY = 2319;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_CMD_SELF_DIAGNOSIS = 82;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_WRITE_WITHOUT_ENCRYPTION = 9;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_SERVICE_EDY_HISTORY = 5903;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_WRITE_TO_SECURE_FILE = 22;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI_ERR_COM = 3;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI_ERR_TYPE = 7;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_READ_FROM_SECURE_FILE = 21;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_ANS_GET_FIRMWARE_VERSION = 89;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_ANS_SELF_DIAGNOSIS = 83;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_CMD_GET_FIRMWARE_VERSION = 88;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_SEARCH_SERVICE_CODE = 11;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_SERVICE_EDY_NUMBER = 4363;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_DIAG_RAM_TEST = 2;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_IDM_LENGTH = 8;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_SEARCH_SERVICE_CODE = 10;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_SERVICE_IRUCA_HISTORY = 56960;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_REQUEST_RESPONSE = 5;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_ANS_REQUEST_SERVCCE = 3;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_ANS_SEND_PACKET = 93;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI_ERR_PARM = 1;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_DIAG_COMMUNICATION_LINE_TEST = 0;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_SERVICE_SUICA_IN_OUT = 4239;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI_ERR_DATA = 4;
	/// <i>native declaration : libpafe.h</i>
	public static final int PASORI2_DIAG_POLLING_TEST_TO_CARD = 16;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_REQUEST_SYSTEM = 12;
	/// <i>native declaration : libpafe.h</i>
	public static final int FELICA_CMD_WRITE_WITHOUT_ENCRYPTION = 8;
	/// Pointer to unknown (opaque) type
	public static class usb_device extends PointerType {
		public usb_device(Pointer address) {
			super(address);
		}
		public usb_device() {
			super();
		}
	};
	/// Pointer to unknown (opaque) type
	public static class usb_dev_handle extends PointerType {
		public usb_dev_handle(Pointer address) {
			super(address);
		}
		public usb_dev_handle() {
			super();
		}
	};
}
